name: CI testing
on:
  pull_request: {}
  push:
    branches:
      - main
      - release-candidate-*
    tags:
      - v*
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Run the build with SSH debugging enabled
        type: boolean
        required: false
        default: false

defaults:
  run:
    shell: bash -el {0}

jobs:
  static:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: nengo/nengo-bones/actions/setup@main
        with:
          python-version: "3.9"
          cache: false
      - uses: nengo/nengo-bones/actions/generate-and-check@main
      - uses: nengo/nengo-bones/actions/run-script@main
        with:
          name: static
  test:
    needs:
      - static
    timeout-minutes: 60
    strategy:
      matrix:
        include:
          - script: test
            coverage-name: gpu
            tf-version: tensorflow[and-cuda]
            runs-on: [self-hosted, gpu]
          - script: test
            python-version: "3.11"
            coverage-name: latest
          - script: test
            tf-version: tensorflow~=2.8.0
            python-version: "3.8"
            coverage-name: oldest
          - script: test
            tf-version: tensorflow~=2.9.0
            numpy-version: numpy<2
            coverage-name: tf-2.9
          - script: test
            tf-version: tensorflow~=2.13.0
            coverage-name: tf-2.13
          - script: docs
            tf-version: tensorflow[and-cuda]==2.16.1
            python-version: "3.9"
            runs-on: [self-hosted, gpu]
          - script: examples
            tf-version: tensorflow[and-cuda]==2.16.1
            runs-on: [self-hosted, gpu]
      fail-fast: false
    env:
      TF_VERSION: ${{ matrix.tf-version || 'tensorflow' }}
      NUMPY_VERSION: ${{ matrix.numpy-version || 'numpy' }}
      TF_FORCE_GPU_ALLOW_GROWTH: true
      GH_TOKEN: ${{ secrets.PUBLIC_GH_TOKEN }}
    runs-on: ${{ matrix.runs-on || 'ubuntu-latest' }}
    steps:
      - uses: nengo/nengo-bones/actions/setup@main
        with:
          python-version: ${{ matrix.python-version || '3.10' }}
          cache: false
      - uses: nengo/nengo-bones/actions/generate-and-check@main
      - name: Install docs requirements
        if: ${{ contains('docs examples', matrix.script) }}
        run: |
          micromamba install -y pandoc matplotlib
      - uses: nengo/nengo-bones/actions/run-script@main
        with:
          name: ${{ matrix.script }}
      - uses: actions/upload-artifact@v4
        if: ${{ always() && matrix.coverage-name }}
        with:
          name: coverage-${{ matrix.coverage-name }}
          path: .coverage
          include-hidden-files: true
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - test
    if: ${{ always() }}
    steps:
      - uses: nengo/nengo-bones/actions/coverage-report@main
  deploy:
    needs:
      - test
    if: >-
      startsWith(github.ref_name, 'release-candidate-') ||
      (github.ref_type == 'tag' && startsWith(github.ref_name, 'v'))
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Write .pypirc to file
        run: |
          echo '${{ secrets.PYPIRC_FILE }}' > ~/.pypirc
      - uses: actions/checkout@v4
      - uses: nengo/nengo-bones/actions/setup@main
        with:
          python-version: "3.10"
          cache: false
      - uses: nengo/nengo-bones/actions/generate-and-check@main
      - uses: nengo/nengo-bones/actions/run-script@main
        with:
          name: deploy
